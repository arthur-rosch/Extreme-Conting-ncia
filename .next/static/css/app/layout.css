
  !*** css ./node_modules/.pnpm/next@15.2.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[13].oneOf[2].use[1]!./node_modules/.pnpm/next@15.2.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-font-loader/index.js??ruleSet[1].rules[13].oneOf[2].use[2]!./node_modules/.pnpm/next@15.2.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/font/google/target.css?{"path":"app/layout.tsx","import":"Inter","arguments":[{"subsets":["latin"]}],"variableName":"inter"} ***!

/* cyrillic-ext */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/55c55f0601d81cf3-s.woff2) format('woff2');
  unicode-range: U+0460-052F, U+1C80-1C8A, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}
/* cyrillic */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/26a46d62cd723877-s.woff2) format('woff2');
  unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}
/* greek-ext */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/97e0cb1ae144a2a9-s.woff2) format('woff2');
  unicode-range: U+1F00-1FFF;
}
/* greek */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/581909926a08bbc8-s.woff2) format('woff2');
  unicode-range: U+0370-0377, U+037A-037F, U+0384-038A, U+038C, U+038E-03A1, U+03A3-03FF;
}
/* vietnamese */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/df0a9ae256c0569c-s.woff2) format('woff2');
  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB;
}
/* latin-ext */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/8e9860b6e62d6359-s.woff2) format('woff2');
  unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/e4af272ccee01ff0-s.p.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}@font-face {font-family: 'Inter Fallback';src: local("Arial");ascent-override: 90.44%;descent-override: 22.52%;line-gap-override: 0.00%;size-adjust: 107.12%
}.__className_e8ce0c {font-family: 'Inter', 'Inter Fallback';font-style: normal
}

/*!*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/.pnpm/next@15.2.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[13].oneOf[10].use[2]!./node_modules/.pnpm/next@15.2.4_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[13].oneOf[10].use[3]!./app/globals.css ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
*, ::after, ::before, ::backdrop, ::file-selector-button {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  border: 0 solid;
}
html, :host {
  line-height: 1.5;
  -webkit-text-size-adjust: 100%;
  tab-size: 4;
  font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji');
  font-feature-settings: var(--default-font-feature-settings, normal);
  font-variation-settings: var(--default-font-variation-settings, normal);
  -webkit-tap-highlight-color: transparent;
}
hr {
  height: 0;
  color: inherit;
  border-top-width: 1px;
}
abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}
h1, h2, h3, h4, h5, h6 {
  font-size: inherit;
  font-weight: inherit;
}
a {
  color: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}
b, strong {
  font-weight: bolder;
}
code, kbd, samp, pre {
  font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace);
  font-feature-settings: var(--default-mono-font-feature-settings, normal);
  font-variation-settings: var(--default-mono-font-variation-settings, normal);
  font-size: 1em;
}
small {
  font-size: 80%;
}
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
table {
  text-indent: 0;
  border-color: inherit;
  border-collapse: collapse;
}
:-moz-focusring {
  outline: auto;
}
progress {
  vertical-align: baseline;
}
summary {
  display: list-item;
}
ol, ul, menu {
  list-style: none;
}
img, svg, video, canvas, audio, iframe, embed, object {
  display: block;
  vertical-align: middle;
}
img, video {
  max-width: 100%;
  height: auto;
}
button, input, select, optgroup, textarea, ::file-selector-button {
  font: inherit;
  font-feature-settings: inherit;
  font-variation-settings: inherit;
  letter-spacing: inherit;
  color: inherit;
  border-radius: 0;
  background-color: transparent;
  opacity: 1;
}
:where(select:is([multiple], [size])) optgroup {
  font-weight: bolder;
}
:where(select:is([multiple], [size])) optgroup option {
  padding-inline-start: 20px;
}
::file-selector-button {
  margin-inline-end: 4px;
}
::placeholder {
  opacity: 1;
}
@supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
  ::placeholder {
    color: currentcolor;
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, currentcolor 50%, transparent);
    }
  }
}
textarea {
  resize: vertical;
}
::-webkit-search-decoration {
  -webkit-appearance: none;
}
::-webkit-date-and-time-value {
  min-height: 1lh;
  text-align: inherit;
}
::-webkit-datetime-edit {
  display: inline-flex;
}
::-webkit-datetime-edit-fields-wrapper {
  padding: 0;
}
::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
  padding-block: 0;
}
:-moz-ui-invalid {
  box-shadow: none;
}
button, input:where([type='button'], [type='reset'], [type='submit']), ::file-selector-button {
  appearance: button;
}
::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
  height: auto;
}
[hidden]:where(:not([hidden='until-found'])) {
  display: none !important;
}
:root, :host {
  --font-sans: ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
    'Noto Color Emoji';
  --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New',
    monospace;
  --color-red-50: oklch(97.1% 0.013 17.38);
  --color-red-300: oklch(80.8% 0.114 19.571);
  --color-red-400: oklch(70.4% 0.191 22.216);
  --color-red-500: oklch(63.7% 0.237 25.331);
  --color-red-600: oklch(57.7% 0.245 27.325);
  --color-amber-300: oklch(87.9% 0.169 91.605);
  --color-amber-400: oklch(82.8% 0.189 84.429);
  --color-green-300: oklch(87.1% 0.15 154.449);
  --color-green-400: oklch(79.2% 0.209 151.711);
  --color-green-500: oklch(72.3% 0.219 149.579);
  --color-green-600: oklch(62.7% 0.194 149.214);
  --color-green-700: oklch(52.7% 0.154 150.069);
  --color-emerald-300: oklch(84.5% 0.143 164.978);
  --color-emerald-400: oklch(76.5% 0.177 163.223);
  --color-cyan-300: oklch(86.5% 0.127 207.078);
  --color-cyan-400: oklch(78.9% 0.154 211.53);
  --color-blue-300: oklch(80.9% 0.105 251.813);
  --color-blue-500: oklch(62.3% 0.214 259.815);
  --color-blue-600: oklch(54.6% 0.245 262.881);
  --color-violet-300: oklch(81.1% 0.111 293.571);
  --color-violet-400: oklch(70.2% 0.183 293.541);
  --color-violet-500: oklch(60.6% 0.25 292.717);
  --color-purple-300: oklch(82.7% 0.119 306.383);
  --color-purple-500: oklch(62.7% 0.265 303.9);
  --color-pink-300: oklch(82.3% 0.12 346.018);
  --color-pink-400: oklch(71.8% 0.202 349.761);
  --color-rose-300: oklch(81% 0.117 11.638);
  --color-rose-400: oklch(71.2% 0.194 13.428);
  --color-slate-300: oklch(86.9% 0.022 252.894);
  --color-slate-400: oklch(70.4% 0.04 256.788);
  --color-black: #000;
  --color-white: #fff;
  --spacing: 0.25rem;
  --container-sm: 24rem;
  --container-md: 28rem;
  --container-lg: 32rem;
  --container-2xl: 42rem;
  --container-7xl: 80rem;
  --text-xs: 0.75rem;
  --text-xs--line-height: calc(1 / 0.75);
  --text-sm: 0.875rem;
  --text-sm--line-height: calc(1.25 / 0.875);
  --text-base: 1rem;
  --text-base--line-height: calc(1.5 / 1);
  --text-lg: 1.125rem;
  --text-lg--line-height: calc(1.75 / 1.125);
  --text-xl: 1.25rem;
  --text-xl--line-height: calc(1.75 / 1.25);
  --text-2xl: 1.5rem;
  --text-2xl--line-height: calc(2 / 1.5);
  --text-3xl: 1.875rem;
  --text-3xl--line-height: calc(2.25 / 1.875);
  --text-4xl: 2.25rem;
  --text-4xl--line-height: calc(2.5 / 2.25);
  --font-weight-normal: 400;
  --font-weight-medium: 500;
  --font-weight-semibold: 600;
  --font-weight-bold: 700;
  --tracking-tight: -0.025em;
  --tracking-widest: 0.1em;
  --leading-tight: 1.25;
  --leading-relaxed: 1.625;
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: 0.75rem;
  --radius-2xl: 1rem;
  --radius-3xl: 1.5rem;
  --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
  --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  --blur-sm: 8px;
  --blur-xl: 24px;
  --aspect-video: 16 / 9;
  --default-transition-duration: 150ms;
  --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  --default-font-family: var(--font-sans);
  --default-mono-font-family: var(--font-mono);
  --radius: 0.5rem;
  --color-background: 222.2 84% 4.9%;
  --color-foreground: 210 40% 98%;
  --color-card: 222.2 84% 4.9%;
  --color-card-foreground: 210 40% 98%;
  --color-popover: 222.2 84% 4.9%;
  --color-popover-foreground: 210 40% 98%;
  --color-primary: 217.2 91.2% 59.8%;
  --color-primary-foreground: 222.2 47.4% 11.2%;
  --color-secondary: 217.2 32.6% 17.5%;
  --color-secondary-foreground: 210 40% 98%;
  --color-muted: 217.2 32.6% 17.5%;
  --color-muted-foreground: 215 20.2% 65.1%;
  --color-accent: 217.2 32.6% 17.5%;
  --color-accent-foreground: 210 40% 98%;
  --color-destructive: 0 62.8% 30.6%;
  --color-destructive-foreground: 210 40% 98%;
  --color-border: 217.2 32.6% 17.5%;
  --color-input: 217.2 32.6% 17.5%;
  --color-ring: 224.3 76.3% 48%;
}
.pointer-events-auto {
  pointer-events: auto;
}
.pointer-events-none {
  pointer-events: none;
}
.invisible {
  visibility: hidden;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.absolute {
  position: absolute;
}
.fixed {
  position: fixed;
}
.relative {
  position: relative;
}
.static {
  position: static;
}
.sticky {
  position: sticky;
}
.inset-0 {
  inset: calc(var(--spacing) * 0);
}
.inset-x-0 {
  inset-inline: calc(var(--spacing) * 0);
}
.inset-y-0 {
  inset-block: calc(var(--spacing) * 0);
}
.-top-12 {
  top: calc(var(--spacing) * -12);
}
.top-0 {
  top: calc(var(--spacing) * 0);
}
.top-1\.5 {
  top: calc(var(--spacing) * 1.5);
}
.top-1\/2 {
  top: calc(1/2 * 100%);
}
.top-2 {
  top: calc(var(--spacing) * 2);
}
.top-3\.5 {
  top: calc(var(--spacing) * 3.5);
}
.top-4 {
  top: calc(var(--spacing) * 4);
}
.top-\[1px\] {
  top: 1px;
}
.top-\[50\%\] {
  top: 50%;
}
.top-\[60\%\] {
  top: 60%;
}
.top-full {
  top: 100%;
}
.-right-12 {
  right: calc(var(--spacing) * -12);
}
.right-0 {
  right: calc(var(--spacing) * 0);
}
.right-1 {
  right: calc(var(--spacing) * 1);
}
.right-2 {
  right: calc(var(--spacing) * 2);
}
.right-3 {
  right: calc(var(--spacing) * 3);
}
.right-4 {
  right: calc(var(--spacing) * 4);
}
.-bottom-12 {
  bottom: calc(var(--spacing) * -12);
}
.bottom-0 {
  bottom: calc(var(--spacing) * 0);
}
.-left-12 {
  left: calc(var(--spacing) * -12);
}
.left-0 {
  left: calc(var(--spacing) * 0);
}
.left-1\/2 {
  left: calc(1/2 * 100%);
}
.left-2 {
  left: calc(var(--spacing) * 2);
}
.left-3 {
  left: calc(var(--spacing) * 3);
}
.left-\[50\%\] {
  left: 50%;
}
.z-10 {
  z-index: 10;
}
.z-20 {
  z-index: 20;
}
.z-50 {
  z-index: 50;
}
.z-\[1\] {
  z-index: 1;
}
.z-\[100\] {
  z-index: 100;
}
.col-span-1 {
  grid-column: span 1 / span 1;
}
.-mx-1 {
  margin-inline: calc(var(--spacing) * -1);
}
.mx-2 {
  margin-inline: calc(var(--spacing) * 2);
}
.mx-3\.5 {
  margin-inline: calc(var(--spacing) * 3.5);
}
.mx-auto {
  margin-inline: auto;
}
.my-0\.5 {
  margin-block: calc(var(--spacing) * 0.5);
}
.my-1 {
  margin-block: calc(var(--spacing) * 1);
}
.-mt-4 {
  margin-top: calc(var(--spacing) * -4);
}
.mt-1 {
  margin-top: calc(var(--spacing) * 1);
}
.mt-1\.5 {
  margin-top: calc(var(--spacing) * 1.5);
}
.mt-2 {
  margin-top: calc(var(--spacing) * 2);
}
.mt-4 {
  margin-top: calc(var(--spacing) * 4);
}
.mt-6 {
  margin-top: calc(var(--spacing) * 6);
}
.mt-8 {
  margin-top: calc(var(--spacing) * 8);
}
.mt-24 {
  margin-top: calc(var(--spacing) * 24);
}
.mt-28 {
  margin-top: calc(var(--spacing) * 28);
}
.mt-auto {
  margin-top: auto;
}
.mr-2 {
  margin-right: calc(var(--spacing) * 2);
}
.mb-1 {
  margin-bottom: calc(var(--spacing) * 1);
}
.mb-6 {
  margin-bottom: calc(var(--spacing) * 6);
}
.mb-8 {
  margin-bottom: calc(var(--spacing) * 8);
}
.-ml-4 {
  margin-left: calc(var(--spacing) * -4);
}
.ml-1 {
  margin-left: calc(var(--spacing) * 1);
}
.ml-4 {
  margin-left: calc(var(--spacing) * 4);
}
.ml-auto {
  margin-left: auto;
}
.block {
  display: block;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.inline-block {
  display: inline-block;
}
.inline-flex {
  display: inline-flex;
}
.table {
  display: table;
}
.aspect-square {
  aspect-ratio: 1 / 1;
}
.aspect-video {
  aspect-ratio: var(--aspect-video);
}
.size-4 {
  width: calc(var(--spacing) * 4);
  height: calc(var(--spacing) * 4);
}
.size-\[--cell-size\] {
  width: --cell-size;
  height: --cell-size;
}
.h-1\.5 {
  height: calc(var(--spacing) * 1.5);
}
.h-2 {
  height: calc(var(--spacing) * 2);
}
.h-2\.5 {
  height: calc(var(--spacing) * 2.5);
}
.h-3 {
  height: calc(var(--spacing) * 3);
}
.h-3\.5 {
  height: calc(var(--spacing) * 3.5);
}
.h-4 {
  height: calc(var(--spacing) * 4);
}
.h-5 {
  height: calc(var(--spacing) * 5);
}
.h-6 {
  height: calc(var(--spacing) * 6);
}
.h-7 {
  height: calc(var(--spacing) * 7);
}
.h-8 {
  height: calc(var(--spacing) * 8);
}
.h-9 {
  height: calc(var(--spacing) * 9);
}
.h-10 {
  height: calc(var(--spacing) * 10);
}
.h-11 {
  height: calc(var(--spacing) * 11);
}
.h-12 {
  height: calc(var(--spacing) * 12);
}
.h-64 {
  height: calc(var(--spacing) * 64);
}
.h-\[--cell-size\] {
  height: --cell-size;
}
.h-\[1px\] {
  height: 1px;
}
.h-\[28vh\] {
  height: 28vh;
}
.h-\[65vh\] {
  height: 65vh;
}
.h-\[var\(--radix-navigation-menu-viewport-height\)\] {
  height: var(--radix-navigation-menu-viewport-height);
}
.h-\[var\(--radix-select-trigger-height\)\] {
  height: var(--radix-select-trigger-height);
}
.h-auto {
  height: auto;
}
.h-full {
  height: 100%;
}
.h-px {
  height: 1px;
}
.h-svh {
  height: 100svh;
}
.max-h-48 {
  max-height: calc(var(--spacing) * 48);
}
.max-h-64 {
  max-height: calc(var(--spacing) * 64);
}
.max-h-96 {
  max-height: calc(var(--spacing) * 96);
}
.max-h-\[36vh\] {
  max-height: 36vh;
}
.max-h-\[40vh\] {
  max-height: 40vh;
}
.max-h-\[60vh\] {
  max-height: 60vh;
}
.max-h-\[85vh\] {
  max-height: 85vh;
}
.max-h-\[90vh\] {
  max-height: 90vh;
}
.max-h-\[300px\] {
  max-height: 300px;
}
.max-h-\[calc\(100vh-140px\)\] {
  max-height: calc(100vh - 140px);
}
.max-h-screen {
  max-height: 100vh;
}
.min-h-0 {
  min-height: calc(var(--spacing) * 0);
}
.min-h-\[80px\] {
  min-height: 80px;
}
.min-h-screen {
  min-height: 100vh;
}
.min-h-svh {
  min-height: 100svh;
}
.w-0 {
  width: calc(var(--spacing) * 0);
}
.w-1 {
  width: calc(var(--spacing) * 1);
}
.w-2 {
  width: calc(var(--spacing) * 2);
}
.w-2\.5 {
  width: calc(var(--spacing) * 2.5);
}
.w-3 {
  width: calc(var(--spacing) * 3);
}
.w-3\.5 {
  width: calc(var(--spacing) * 3.5);
}
.w-3\/4 {
  width: calc(3/4 * 100%);
}
.w-4 {
  width: calc(var(--spacing) * 4);
}
.w-5 {
  width: calc(var(--spacing) * 5);
}
.w-6 {
  width: calc(var(--spacing) * 6);
}
.w-7 {
  width: calc(var(--spacing) * 7);
}
.w-8 {
  width: calc(var(--spacing) * 8);
}
.w-9 {
  width: calc(var(--spacing) * 9);
}
.w-10 {
  width: calc(var(--spacing) * 10);
}
.w-11 {
  width: calc(var(--spacing) * 11);
}
.w-64 {
  width: calc(var(--spacing) * 64);
}
.w-72 {
  width: calc(var(--spacing) * 72);
}
.w-\[--cell-size\] {
  width: --cell-size;
}
.w-\[--sidebar-width\] {
  width: --sidebar-width;
}
.w-\[1px\] {
  width: 1px;
}
.w-\[22rem\] {
  width: 22rem;
}
.w-\[100px\] {
  width: 100px;
}
.w-\[320px\] {
  width: 320px;
}
.w-auto {
  width: auto;
}
.w-fit {
  width: fit-content;
}
.w-full {
  width: 100%;
}
.w-max {
  width: max-content;
}
.w-px {
  width: 1px;
}
.max-w-2xl {
  max-width: var(--container-2xl);
}
.max-w-7xl {
  max-width: var(--container-7xl);
}
.max-w-\[--skeleton-width\] {
  max-width: --skeleton-width;
}
.max-w-\[200px\] {
  max-width: 200px;
}
.max-w-\[1400px\] {
  max-width: 1400px;
}
.max-w-lg {
  max-width: var(--container-lg);
}
.max-w-max {
  max-width: max-content;
}
.max-w-md {
  max-width: var(--container-md);
}
.max-w-none {
  max-width: none;
}
.min-w-0 {
  min-width: calc(var(--spacing) * 0);
}
.min-w-5 {
  min-width: calc(var(--spacing) * 5);
}
.min-w-9 {
  min-width: calc(var(--spacing) * 9);
}
.min-w-10 {
  min-width: calc(var(--spacing) * 10);
}
.min-w-11 {
  min-width: calc(var(--spacing) * 11);
}
.min-w-\[--cell-size\] {
  min-width: --cell-size;
}
.min-w-\[8rem\] {
  min-width: 8rem;
}
.min-w-\[12rem\] {
  min-width: 12rem;
}
.min-w-\[var\(--radix-select-trigger-width\)\] {
  min-width: var(--radix-select-trigger-width);
}
.min-w-full {
  min-width: 100%;
}
.flex-1 {
  flex: 1;
}
.flex-shrink-0 {
  flex-shrink: 0;
}
.shrink-0 {
  flex-shrink: 0;
}
.flex-grow {
  flex-grow: 1;
}
.grow {
  flex-grow: 1;
}
.grow-0 {
  flex-grow: 0;
}
.basis-full {
  flex-basis: 100%;
}
.table-auto {
  table-layout: auto;
}
.caption-bottom {
  caption-side: bottom;
}
.border-collapse {
  border-collapse: collapse;
}
.-translate-x-1\/2 {
  --tw-translate-x: calc(calc(1/2 * 100%) * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-x-px {
  --tw-translate-x: -1px;
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.translate-x-\[-50\%\] {
  --tw-translate-x: -50%;
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.translate-x-px {
  --tw-translate-x: 1px;
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-y-1\/2 {
  --tw-translate-y: calc(calc(1/2 * 100%) * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.translate-y-\[-50\%\] {
  --tw-translate-y: -50%;
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.rotate-45 {
  rotate: 45deg;
}
.rotate-90 {
  rotate: 90deg;
}
.transform {
  transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
}
.animate-pulse {
  animation: var(--animate-pulse);
}
.cursor-default {
  cursor: default;
}
.cursor-pointer {
  cursor: pointer;
}
.touch-none {
  touch-action: none;
}
.resize-none {
  resize: none;
}
.list-none {
  list-style-type: none;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}
.flex-col {
  flex-direction: column;
}
.flex-col-reverse {
  flex-direction: column-reverse;
}
.flex-row {
  flex-direction: row;
}
.flex-wrap {
  flex-wrap: wrap;
}
.items-center {
  align-items: center;
}
.items-end {
  align-items: flex-end;
}
.items-start {
  align-items: flex-start;
}
.items-stretch {
  align-items: stretch;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.justify-end {
  justify-content: flex-end;
}
.gap-1 {
  gap: calc(var(--spacing) * 1);
}
.gap-1\.5 {
  gap: calc(var(--spacing) * 1.5);
}
.gap-2 {
  gap: calc(var(--spacing) * 2);
}
.gap-3 {
  gap: calc(var(--spacing) * 3);
}
.gap-4 {
  gap: calc(var(--spacing) * 4);
}
.gap-6 {
  gap: calc(var(--spacing) * 6);
}
.space-y-1 {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
  }
}
.space-y-1\.5 {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 1.5) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 1.5) * calc(1 - var(--tw-space-y-reverse)));
  }
}
.space-y-2 {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
  }
}
.space-y-3 {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
  }
}
.space-y-4 {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
  }
}
.space-y-6 {
  :where(& > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
  }
}
.space-x-1 {
  :where(& > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
  }
}
.space-x-4 {
  :where(& > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
  }
}
.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.overflow-auto {
  overflow: auto;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-x-auto {
  overflow-x: auto;
}
.overflow-x-hidden {
  overflow-x: hidden;
}
.overflow-y-auto {
  overflow-y: auto;
}
.overscroll-contain {
  overscroll-behavior: contain;
}
.scroll-smooth {
  scroll-behavior: smooth;
}
.rounded-2xl {
  border-radius: var(--radius-2xl);
}
.rounded-3xl {
  border-radius: var(--radius-3xl);
}
.rounded-\[2px\] {
  border-radius: 2px;
}
.rounded-\[inherit\] {
  border-radius: inherit;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.rounded-lg {
  border-radius: var(--radius-lg);
}
.rounded-md {
  border-radius: var(--radius-md);
}
.rounded-none {
  border-radius: 0;
}
.rounded-sm {
  border-radius: var(--radius-sm);
}
.rounded-xl {
  border-radius: var(--radius-xl);
}
.rounded-t-\[10px\] {
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
}
.rounded-l-md {
  border-top-left-radius: var(--radius-md);
  border-bottom-left-radius: var(--radius-md);
}
.rounded-tl-sm {
  border-top-left-radius: var(--radius-sm);
}
.rounded-r-md {
  border-top-right-radius: var(--radius-md);
  border-bottom-right-radius: var(--radius-md);
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-0 {
  border-style: var(--tw-border-style);
  border-width: 0px;
}
.border-2 {
  border-style: var(--tw-border-style);
  border-width: 2px;
}
.border-\[1\.5px\] {
  border-style: var(--tw-border-style);
  border-width: 1.5px;
}
.border-y {
  border-block-style: var(--tw-border-style);
  border-block-width: 1px;
}
.border-t {
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
}
.border-r {
  border-right-style: var(--tw-border-style);
  border-right-width: 1px;
}
.border-b {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 1px;
}
.border-l {
  border-left-style: var(--tw-border-style);
  border-left-width: 1px;
}
.border-dashed {
  --tw-border-style: dashed;
  border-style: dashed;
}
.border-\[--color-border\] {
  border-color: --color-border;
}
.border-amber-400\/30 {
  border-color: color-mix(in srgb, oklch(82.8% 0.189 84.429) 30%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-amber-400) 30%, transparent);
  }
}
.border-blue-500\/30 {
  border-color: color-mix(in srgb, oklch(62.3% 0.214 259.815) 30%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-blue-500) 30%, transparent);
  }
}
.border-border\/50 {
  border-color: color-mix(in srgb, 217.2 32.6% 17.5% 50%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-border) 50%, transparent);
  }
}
.border-cyan-400\/30 {
  border-color: color-mix(in srgb, oklch(78.9% 0.154 211.53) 30%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-cyan-400) 30%, transparent);
  }
}
.border-destructive {
  border-color: var(--color-destructive);
}
.border-destructive\/50 {
  border-color: color-mix(in srgb, 0 62.8% 30.6% 50%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-destructive) 50%, transparent);
  }
}
.border-emerald-400\/30 {
  border-color: color-mix(in srgb, oklch(76.5% 0.177 163.223) 30%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-emerald-400) 30%, transparent);
  }
}
.border-green-500 {
  border-color: var(--color-green-500);
}
.border-green-500\/30 {
  border-color: color-mix(in srgb, oklch(72.3% 0.219 149.579) 30%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-green-500) 30%, transparent);
  }
}
.border-input {
  border-color: var(--color-input);
}
.border-pink-400\/30 {
  border-color: color-mix(in srgb, oklch(71.8% 0.202 349.761) 30%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-pink-400) 30%, transparent);
  }
}
.border-primary {
  border-color: var(--color-primary);
}
.border-purple-500\/30 {
  border-color: color-mix(in srgb, oklch(62.7% 0.265 303.9) 30%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-purple-500) 30%, transparent);
  }
}
.border-red-500\/30 {
  border-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 30%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-red-500) 30%, transparent);
  }
}
.border-rose-400\/30 {
  border-color: color-mix(in srgb, oklch(71.2% 0.194 13.428) 30%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-rose-400) 30%, transparent);
  }
}
.border-slate-400\/30 {
  border-color: color-mix(in srgb, oklch(70.4% 0.04 256.788) 30%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-slate-400) 30%, transparent);
  }
}
.border-transparent {
  border-color: transparent;
}
.border-violet-400\/30 {
  border-color: color-mix(in srgb, oklch(70.2% 0.183 293.541) 30%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-violet-400) 30%, transparent);
  }
}
.border-white\/10 {
  border-color: color-mix(in srgb, #fff 10%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
  }
}
.border-white\/20 {
  border-color: color-mix(in srgb, #fff 20%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
  }
}
.border-white\/25 {
  border-color: color-mix(in srgb, #fff 25%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-white) 25%, transparent);
  }
}
.border-white\/\[0\.1\] {
  border-color: color-mix(in srgb, #fff 10%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
  }
}
.border-white\/\[0\.02\] {
  border-color: color-mix(in srgb, #fff 2%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-white) 2%, transparent);
  }
}
.border-white\/\[0\.05\] {
  border-color: color-mix(in srgb, #fff 5%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
  }
}
.border-white\/\[0\.08\] {
  border-color: color-mix(in srgb, #fff 8%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-white) 8%, transparent);
  }
}
.border-t-transparent {
  border-top-color: transparent;
}
.border-l-transparent {
  border-left-color: transparent;
}
.bg-\[\#0a1220\] {
  background-color: #0a1220;
}
.bg-\[\#25D366\] {
  background-color: #25D366;
}
.bg-\[\#E1306C\] {
  background-color: #E1306C;
}
.bg-\[--color-bg\] {
  background-color: --color-bg;
}
.bg-accent {
  background-color: var(--color-accent);
}
.bg-amber-400\/20 {
  background-color: color-mix(in srgb, oklch(82.8% 0.189 84.429) 20%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-amber-400) 20%, transparent);
  }
}
.bg-background {
  background-color: var(--color-background);
}
.bg-black\/20 {
  background-color: color-mix(in srgb, #000 20%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-black) 20%, transparent);
  }
}
.bg-black\/80 {
  background-color: color-mix(in srgb, #000 80%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-black) 80%, transparent);
  }
}
.bg-black\/90 {
  background-color: color-mix(in srgb, #000 90%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-black) 90%, transparent);
  }
}
.bg-blue-500 {
  background-color: var(--color-blue-500);
}
.bg-blue-500\/20 {
  background-color: color-mix(in srgb, oklch(62.3% 0.214 259.815) 20%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-blue-500) 20%, transparent);
  }
}
.bg-border {
  background-color: var(--color-border);
}
.bg-card {
  background-color: var(--color-card);
}
.bg-cyan-400\/20 {
  background-color: color-mix(in srgb, oklch(78.9% 0.154 211.53) 20%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-cyan-400) 20%, transparent);
  }
}
.bg-destructive {
  background-color: var(--color-destructive);
}
.bg-emerald-400\/20 {
  background-color: color-mix(in srgb, oklch(76.5% 0.177 163.223) 20%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-emerald-400) 20%, transparent);
  }
}
.bg-foreground {
  background-color: var(--color-foreground);
}
.bg-green-500 {
  background-color: var(--color-green-500);
}
.bg-green-500\/20 {
  background-color: color-mix(in srgb, oklch(72.3% 0.219 149.579) 20%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-green-500) 20%, transparent);
  }
}
.bg-green-600 {
  background-color: var(--color-green-600);
}
.bg-muted {
  background-color: var(--color-muted);
}
.bg-muted\/50 {
  background-color: color-mix(in srgb, 217.2 32.6% 17.5% 50%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-muted) 50%, transparent);
  }
}
.bg-pink-400\/20 {
  background-color: color-mix(in srgb, oklch(71.8% 0.202 349.761) 20%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-pink-400) 20%, transparent);
  }
}
.bg-popover {
  background-color: var(--color-popover);
}
.bg-primary {
  background-color: var(--color-primary);
}
.bg-purple-500\/20 {
  background-color: color-mix(in srgb, oklch(62.7% 0.265 303.9) 20%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-purple-500) 20%, transparent);
  }
}
.bg-red-500 {
  background-color: var(--color-red-500);
}
.bg-red-500\/20 {
  background-color: color-mix(in srgb, oklch(63.7% 0.237 25.331) 20%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-red-500) 20%, transparent);
  }
}
.bg-rose-400\/20 {
  background-color: color-mix(in srgb, oklch(71.2% 0.194 13.428) 20%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-rose-400) 20%, transparent);
  }
}
.bg-secondary {
  background-color: var(--color-secondary);
}
.bg-slate-400\/20 {
  background-color: color-mix(in srgb, oklch(70.4% 0.04 256.788) 20%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-slate-400) 20%, transparent);
  }
}
.bg-transparent {
  background-color: transparent;
}
.bg-violet-400\/20 {
  background-color: color-mix(in srgb, oklch(70.2% 0.183 293.541) 20%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-violet-400) 20%, transparent);
  }
}
.bg-white\/5 {
  background-color: color-mix(in srgb, #fff 5%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
  }
}
.bg-white\/10 {
  background-color: color-mix(in srgb, #fff 10%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
  }
}
.bg-white\/\[0\.02\] {
  background-color: color-mix(in srgb, #fff 2%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-white) 2%, transparent);
  }
}
.bg-white\/\[0\.03\] {
  background-color: color-mix(in srgb, #fff 3%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-white) 3%, transparent);
  }
}
.bg-white\/\[0\.04\] {
  background-color: color-mix(in srgb, #fff 4%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-white) 4%, transparent);
  }
}
.bg-white\/\[0\.05\] {
  background-color: color-mix(in srgb, #fff 5%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
  }
}
.bg-gradient-to-t {
  --tw-gradient-position: to top in oklab;
  background-image: linear-gradient(var(--tw-gradient-stops));
}
.from-\[\#010B18\] {
  --tw-gradient-from: #010B18;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.via-\[\#010B18\]\/90 {
  --tw-gradient-via: color-mix(in oklab, #010B18 90%, transparent);
  --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-via-stops);
}
.to-transparent {
  --tw-gradient-to: transparent;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.fill-current {
  fill: currentcolor;
}
.object-cover {
  object-fit: cover;
}
.p-0 {
  padding: calc(var(--spacing) * 0);
}
.p-1 {
  padding: calc(var(--spacing) * 1);
}
.p-2 {
  padding: calc(var(--spacing) * 2);
}
.p-3 {
  padding: calc(var(--spacing) * 3);
}
.p-4 {
  padding: calc(var(--spacing) * 4);
}
.p-6 {
  padding: calc(var(--spacing) * 6);
}
.p-8 {
  padding: calc(var(--spacing) * 8);
}
.p-\[1px\] {
  padding: 1px;
}
.px-1 {
  padding-inline: calc(var(--spacing) * 1);
}
.px-2 {
  padding-inline: calc(var(--spacing) * 2);
}
.px-2\.5 {
  padding-inline: calc(var(--spacing) * 2.5);
}
.px-3 {
  padding-inline: calc(var(--spacing) * 3);
}
.px-4 {
  padding-inline: calc(var(--spacing) * 4);
}
.px-5 {
  padding-inline: calc(var(--spacing) * 5);
}
.px-6 {
  padding-inline: calc(var(--spacing) * 6);
}
.px-8 {
  padding-inline: calc(var(--spacing) * 8);
}
.px-\[--cell-size\] {
  padding-inline: --cell-size;
}
.py-0\.5 {
  padding-block: calc(var(--spacing) * 0.5);
}
.py-1 {
  padding-block: calc(var(--spacing) * 1);
}
.py-1\.5 {
  padding-block: calc(var(--spacing) * 1.5);
}
.py-2 {
  padding-block: calc(var(--spacing) * 2);
}
.py-3 {
  padding-block: calc(var(--spacing) * 3);
}
.py-4 {
  padding-block: calc(var(--spacing) * 4);
}
.py-6 {
  padding-block: calc(var(--spacing) * 6);
}
.py-8 {
  padding-block: calc(var(--spacing) * 8);
}
.py-10 {
  padding-block: calc(var(--spacing) * 10);
}
.pt-0 {
  padding-top: calc(var(--spacing) * 0);
}
.pt-2 {
  padding-top: calc(var(--spacing) * 2);
}
.pt-3 {
  padding-top: calc(var(--spacing) * 3);
}
.pt-4 {
  padding-top: calc(var(--spacing) * 4);
}
.pt-8 {
  padding-top: calc(var(--spacing) * 8);
}
.pt-24 {
  padding-top: calc(var(--spacing) * 24);
}
.pr-1 {
  padding-right: calc(var(--spacing) * 1);
}
.pr-2 {
  padding-right: calc(var(--spacing) * 2);
}
.pr-2\.5 {
  padding-right: calc(var(--spacing) * 2.5);
}
.pr-8 {
  padding-right: calc(var(--spacing) * 8);
}
.pb-2 {
  padding-bottom: calc(var(--spacing) * 2);
}
.pb-3 {
  padding-bottom: calc(var(--spacing) * 3);
}
.pb-4 {
  padding-bottom: calc(var(--spacing) * 4);
}
.pb-6 {
  padding-bottom: calc(var(--spacing) * 6);
}
.pb-\[calc\(env\(safe-area-inset-bottom\,0\)\+8px\)\] {
  padding-bottom: calc(env(safe-area-inset-bottom,0) + 8px);
}
.pl-2 {
  padding-left: calc(var(--spacing) * 2);
}
.pl-2\.5 {
  padding-left: calc(var(--spacing) * 2.5);
}
.pl-4 {
  padding-left: calc(var(--spacing) * 4);
}
.pl-8 {
  padding-left: calc(var(--spacing) * 8);
}
.pl-9 {
  padding-left: calc(var(--spacing) * 9);
}
.text-center {
  text-align: center;
}
.text-left {
  text-align: left;
}
.align-middle {
  vertical-align: middle;
}
.font-mono {
  font-family: var(--font-mono);
}
.text-2xl {
  font-size: var(--text-2xl);
  line-height: var(--tw-leading, var(--text-2xl--line-height));
}
.text-3xl {
  font-size: var(--text-3xl);
  line-height: var(--tw-leading, var(--text-3xl--line-height));
}
.text-base {
  font-size: var(--text-base);
  line-height: var(--tw-leading, var(--text-base--line-height));
}
.text-lg {
  font-size: var(--text-lg);
  line-height: var(--tw-leading, var(--text-lg--line-height));
}
.text-sm {
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
}
.text-xl {
  font-size: var(--text-xl);
  line-height: var(--tw-leading, var(--text-xl--line-height));
}
.text-xs {
  font-size: var(--text-xs);
  line-height: var(--tw-leading, var(--text-xs--line-height));
}
.text-\[0\.8rem\] {
  font-size: 0.8rem;
}
.text-\[10px\] {
  font-size: 10px;
}
.text-\[11px\] {
  font-size: 11px;
}
.leading-none {
  --tw-leading: 1;
  line-height: 1;
}
.leading-relaxed {
  --tw-leading: var(--leading-relaxed);
  line-height: var(--leading-relaxed);
}
.leading-tight {
  --tw-leading: var(--leading-tight);
  line-height: var(--leading-tight);
}
.font-bold {
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
}
.font-medium {
  --tw-font-weight: var(--font-weight-medium);
  font-weight: var(--font-weight-medium);
}
.font-normal {
  --tw-font-weight: var(--font-weight-normal);
  font-weight: var(--font-weight-normal);
}
.font-semibold {
  --tw-font-weight: var(--font-weight-semibold);
  font-weight: var(--font-weight-semibold);
}
.tracking-tight {
  --tw-tracking: var(--tracking-tight);
  letter-spacing: var(--tracking-tight);
}
.tracking-widest {
  --tw-tracking: var(--tracking-widest);
  letter-spacing: var(--tracking-widest);
}
.break-words {
  overflow-wrap: break-word;
}
.whitespace-nowrap {
  white-space: nowrap;
}
.whitespace-pre-wrap {
  white-space: pre-wrap;
}
.text-accent-foreground {
  color: var(--color-accent-foreground);
}
.text-amber-300 {
  color: var(--color-amber-300);
}
.text-blue-300 {
  color: var(--color-blue-300);
}
.text-card-foreground {
  color: var(--color-card-foreground);
}
.text-current {
  color: currentcolor;
}
.text-cyan-300 {
  color: var(--color-cyan-300);
}
.text-destructive {
  color: var(--color-destructive);
}
.text-destructive-foreground {
  color: var(--color-destructive-foreground);
}
.text-emerald-300 {
  color: var(--color-emerald-300);
}
.text-foreground {
  color: var(--color-foreground);
}
.text-foreground\/50 {
  color: color-mix(in srgb, 210 40% 98% 50%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    color: color-mix(in oklab, var(--color-foreground) 50%, transparent);
  }
}
.text-green-300 {
  color: var(--color-green-300);
}
.text-green-400 {
  color: var(--color-green-400);
}
.text-muted-foreground {
  color: var(--color-muted-foreground);
}
.text-pink-300 {
  color: var(--color-pink-300);
}
.text-popover-foreground {
  color: var(--color-popover-foreground);
}
.text-primary {
  color: var(--color-primary);
}
.text-primary-foreground {
  color: var(--color-primary-foreground);
}
.text-purple-300 {
  color: var(--color-purple-300);
}
.text-red-300 {
  color: var(--color-red-300);
}
.text-red-400 {
  color: var(--color-red-400);
}
.text-red-500 {
  color: var(--color-red-500);
}
.text-rose-300 {
  color: var(--color-rose-300);
}
.text-secondary-foreground {
  color: var(--color-secondary-foreground);
}
.text-slate-300 {
  color: var(--color-slate-300);
}
.text-violet-300 {
  color: var(--color-violet-300);
}
.text-white {
  color: var(--color-white);
}
.text-white\/30 {
  color: color-mix(in srgb, #fff 30%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    color: color-mix(in oklab, var(--color-white) 30%, transparent);
  }
}
.text-white\/50 {
  color: color-mix(in srgb, #fff 50%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    color: color-mix(in oklab, var(--color-white) 50%, transparent);
  }
}
.text-white\/60 {
  color: color-mix(in srgb, #fff 60%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    color: color-mix(in oklab, var(--color-white) 60%, transparent);
  }
}
.text-white\/70 {
  color: color-mix(in srgb, #fff 70%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    color: color-mix(in oklab, var(--color-white) 70%, transparent);
  }
}
.text-white\/80 {
  color: color-mix(in srgb, #fff 80%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    color: color-mix(in oklab, var(--color-white) 80%, transparent);
  }
}
.text-white\/90 {
  color: color-mix(in srgb, #fff 90%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    color: color-mix(in oklab, var(--color-white) 90%, transparent);
  }
}
.text-white\/95 {
  color: color-mix(in srgb, #fff 95%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    color: color-mix(in oklab, var(--color-white) 95%, transparent);
  }
}
.tabular-nums {
  --tw-numeric-spacing: tabular-nums;
  font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
}
.underline-offset-4 {
  text-underline-offset: 4px;
}
.opacity-0 {
  opacity: 0%;
}
.opacity-50 {
  opacity: 50%;
}
.opacity-60 {
  opacity: 60%;
}
.opacity-70 {
  opacity: 70%;
}
.opacity-90 {
  opacity: 90%;
}
.shadow-\[0_0_0_1px_hsl\(var\(--sidebar-border\)\)\] {
  --tw-shadow: 0 0 0 1px var(--tw-shadow-color, hsl(var(--sidebar-border)));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-lg {
  --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-md {
  --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-none {
  --tw-shadow: 0 0 #0000;
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-sm {
  --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-xl {
  --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-xs {
  --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.ring-0 {
  --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.ring-2 {
  --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-card {
  --tw-shadow-color: 222.2 84% 4.9%;
  @supports (color: color-mix(in lab, red, red)) {
    --tw-shadow-color: color-mix(in oklab, var(--color-card) var(--tw-shadow-alpha), transparent);
  }
}
.ring-ring {
  --tw-ring-color: var(--color-ring);
}
.ring-offset-background {
  --tw-ring-offset-color: var(--color-background);
}
.outline {
  outline-style: var(--tw-outline-style);
  outline-width: 1px;
}
.backdrop-blur-sm {
  --tw-backdrop-blur: blur(var(--blur-sm));
  -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
}
.backdrop-blur-xl {
  --tw-backdrop-blur: blur(var(--blur-xl));
  -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-\[left\,right\,width\] {
  transition-property: left,right,width;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-\[margin\,opa\] {
  transition-property: margin,opa;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-\[width\,height\,padding\] {
  transition-property: width,height,padding;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-\[width\] {
  transition-property: width;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-all {
  transition-property: all;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-colors {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-opacity {
  transition-property: opacity;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.transition-transform {
  transition-property: transform, translate, scale, rotate;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.duration-200 {
  --tw-duration: 200ms;
  transition-duration: 200ms;
}
.duration-300 {
  --tw-duration: 300ms;
  transition-duration: 300ms;
}
.duration-500 {
  --tw-duration: 500ms;
  transition-duration: 500ms;
}
.duration-1000 {
  --tw-duration: 1000ms;
  transition-duration: 1000ms;
}
.ease-in-out {
  --tw-ease: var(--ease-in-out);
  transition-timing-function: var(--ease-in-out);
}
.ease-linear {
  --tw-ease: linear;
  transition-timing-function: linear;
}
.outline-none {
  --tw-outline-style: none;
  outline-style: none;
}
.select-none {
  -webkit-user-select: none;
  user-select: none;
}
.\[--cell-size\:--spacing\(8\)\] {
  --cell-size: calc(var(--spacing) * 8);
}
.group-focus-within\/menu-item\:opacity-100 {
  &:is(:where(.group\/menu-item):focus-within *) {
    opacity: 100%;
  }
}
.group-hover\:text-white {
  &:is(:where(.group):hover *) {
    @media (hover: hover) {
      color: var(--color-white);
    }
  }
}
.group-hover\:opacity-100 {
  &:is(:where(.group):hover *) {
    @media (hover: hover) {
      opacity: 100%;
    }
  }
}
.group-hover\/menu-item\:opacity-100 {
  &:is(:where(.group\/menu-item):hover *) {
    @media (hover: hover) {
      opacity: 100%;
    }
  }
}
.group-has-\[\[data-sidebar\=menu-action\]\]\/menu-item\:pr-8 {
  &:is(:where(.group\/menu-item):has(*:is([data-sidebar=menu-action])) *) {
    padding-right: calc(var(--spacing) * 8);
  }
}
.group-data-\[collapsible\=icon\]\:-mt-8 {
  &:is(:where(.group)[data-collapsible="icon"] *) {
    margin-top: calc(var(--spacing) * -8);
  }
}
.group-data-\[collapsible\=icon\]\:hidden {
  &:is(:where(.group)[data-collapsible="icon"] *) {
    display: none;
  }
}
.group-data-\[collapsible\=icon\]\:\!size-8 {
  &:is(:where(.group)[data-collapsible="icon"] *) {
    width: calc(var(--spacing) * 8) !important;
    height: calc(var(--spacing) * 8) !important;
  }
}
.group-data-\[collapsible\=icon\]\:w-\[--sidebar-width-icon\] {
  &:is(:where(.group)[data-collapsible="icon"] *) {
    width: --sidebar-width-icon;
  }
}
.group-data-\[collapsible\=icon\]\:w-\[calc\(var\(--sidebar-width-icon\)_\+_theme\(spacing\.4\)\)\] {
  &:is(:where(.group)[data-collapsible="icon"] *) {
    width: calc(var(--sidebar-width-icon) + 1rem);
  }
}
.group-data-\[collapsible\=icon\]\:w-\[calc\(var\(--sidebar-width-icon\)_\+_theme\(spacing\.4\)_\+2px\)\] {
  &:is(:where(.group)[data-collapsible="icon"] *) {
    width: calc(var(--sidebar-width-icon) + 1rem + 2px);
  }
}
.group-data-\[collapsible\=icon\]\:overflow-hidden {
  &:is(:where(.group)[data-collapsible="icon"] *) {
    overflow: hidden;
  }
}
.group-data-\[collapsible\=icon\]\:\!p-0 {
  &:is(:where(.group)[data-collapsible="icon"] *) {
    padding: calc(var(--spacing) * 0) !important;
  }
}
.group-data-\[collapsible\=icon\]\:\!p-2 {
  &:is(:where(.group)[data-collapsible="icon"] *) {
    padding: calc(var(--spacing) * 2) !important;
  }
}
.group-data-\[collapsible\=icon\]\:opacity-0 {
  &:is(:where(.group)[data-collapsible="icon"] *) {
    opacity: 0%;
  }
}
.group-data-\[collapsible\=offcanvas\]\:right-\[calc\(var\(--sidebar-width\)\*-1\)\] {
  &:is(:where(.group)[data-collapsible="offcanvas"] *) {
    right: calc(var(--sidebar-width) * -1);
  }
}
.group-data-\[collapsible\=offcanvas\]\:left-\[calc\(var\(--sidebar-width\)\*-1\)\] {
  &:is(:where(.group)[data-collapsible="offcanvas"] *) {
    left: calc(var(--sidebar-width) * -1);
  }
}
.group-data-\[collapsible\=offcanvas\]\:w-0 {
  &:is(:where(.group)[data-collapsible="offcanvas"] *) {
    width: calc(var(--spacing) * 0);
  }
}
.group-data-\[collapsible\=offcanvas\]\:translate-x-0 {
  &:is(:where(.group)[data-collapsible="offcanvas"] *) {
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.group-data-\[focused\=true\]\/day\:relative {
  &:is(:where(.group\/day)[data-focused="true"] *) {
    position: relative;
  }
}
.group-data-\[focused\=true\]\/day\:z-10 {
  &:is(:where(.group\/day)[data-focused="true"] *) {
    z-index: 10;
  }
}
.group-data-\[focused\=true\]\/day\:border-ring {
  &:is(:where(.group\/day)[data-focused="true"] *) {
    border-color: var(--color-ring);
  }
}
.group-data-\[focused\=true\]\/day\:ring-\[3px\] {
  &:is(:where(.group\/day)[data-focused="true"] *) {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.group-data-\[focused\=true\]\/day\:ring-ring\/50 {
  &:is(:where(.group\/day)[data-focused="true"] *) {
    --tw-ring-color: color-mix(in srgb, 224.3 76.3% 48% 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-ring) 50%, transparent);
    }
  }
}
.group-data-\[side\=left\]\:-right-4 {
  &:is(:where(.group)[data-side="left"] *) {
    right: calc(var(--spacing) * -4);
  }
}
.group-data-\[side\=left\]\:border-r {
  &:is(:where(.group)[data-side="left"] *) {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
}
.group-data-\[side\=right\]\:left-0 {
  &:is(:where(.group)[data-side="right"] *) {
    left: calc(var(--spacing) * 0);
  }
}
.group-data-\[side\=right\]\:rotate-180 {
  &:is(:where(.group)[data-side="right"] *) {
    rotate: 180deg;
  }
}
.group-data-\[side\=right\]\:border-l {
  &:is(:where(.group)[data-side="right"] *) {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }
}
.group-data-\[state\=open\]\:rotate-180 {
  &:is(:where(.group)[data-state="open"] *) {
    rotate: 180deg;
  }
}
.group-data-\[variant\=floating\]\:rounded-lg {
  &:is(:where(.group)[data-variant="floating"] *) {
    border-radius: var(--radius-lg);
  }
}
.group-data-\[variant\=floating\]\:border {
  &:is(:where(.group)[data-variant="floating"] *) {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
}
.group-data-\[variant\=floating\]\:shadow {
  &:is(:where(.group)[data-variant="floating"] *) {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.group-\[\.destructive\]\:border-muted\/40 {
  &:is(:where(.group):is(.destructive) *) {
    border-color: color-mix(in srgb, 217.2 32.6% 17.5% 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-muted) 40%, transparent);
    }
  }
}
.group-\[\.destructive\]\:text-red-300 {
  &:is(:where(.group):is(.destructive) *) {
    color: var(--color-red-300);
  }
}
.group-\[\.toast\]\:bg-muted {
  &:is(:where(.group):is(.toast) *) {
    background-color: var(--color-muted);
  }
}
.group-\[\.toast\]\:bg-primary {
  &:is(:where(.group):is(.toast) *) {
    background-color: var(--color-primary);
  }
}
.group-\[\.toast\]\:text-muted-foreground {
  &:is(:where(.group):is(.toast) *) {
    color: var(--color-muted-foreground);
  }
}
.group-\[\.toast\]\:text-primary-foreground {
  &:is(:where(.group):is(.toast) *) {
    color: var(--color-primary-foreground);
  }
}
.group-\[\.toaster\]\:border-border {
  &:is(:where(.group):is(.toaster) *) {
    border-color: var(--color-border);
  }
}
.group-\[\.toaster\]\:bg-background {
  &:is(:where(.group):is(.toaster) *) {
    background-color: var(--color-background);
  }
}
.group-\[\.toaster\]\:text-foreground {
  &:is(:where(.group):is(.toaster) *) {
    color: var(--color-foreground);
  }
}
.group-\[\.toaster\]\:shadow-lg {
  &:is(:where(.group):is(.toaster) *) {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.peer-disabled\:cursor-not-allowed {
  &:is(:where(.peer):disabled ~ *) {
    cursor: not-allowed;
  }
}
.peer-disabled\:opacity-70 {
  &:is(:where(.peer):disabled ~ *) {
    opacity: 70%;
  }
}
.peer-data-\[size\=default\]\/menu-button\:top-1\.5 {
  &:is(:where(.peer\/menu-button)[data-size="default"] ~ *) {
    top: calc(var(--spacing) * 1.5);
  }
}
.peer-data-\[size\=lg\]\/menu-button\:top-2\.5 {
  &:is(:where(.peer\/menu-button)[data-size="lg"] ~ *) {
    top: calc(var(--spacing) * 2.5);
  }
}
.peer-data-\[size\=sm\]\/menu-button\:top-1 {
  &:is(:where(.peer\/menu-button)[data-size="sm"] ~ *) {
    top: calc(var(--spacing) * 1);
  }
}
.peer-data-\[variant\=inset\]\:min-h-\[calc\(100svh-theme\(spacing\.4\)\)\] {
  &:is(:where(.peer)[data-variant="inset"] ~ *) {
    min-height: calc(100svh - 1rem);
  }
}
.file\:border-0 {
  &::file-selector-button {
    border-style: var(--tw-border-style);
    border-width: 0px;
  }
}
.file\:bg-transparent {
  &::file-selector-button {
    background-color: transparent;
  }
}
.file\:text-sm {
  &::file-selector-button {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
}
.file\:font-medium {
  &::file-selector-button {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
}
.file\:text-foreground {
  &::file-selector-button {
    color: var(--color-foreground);
  }
}
.placeholder\:text-muted-foreground {
  &::placeholder {
    color: var(--color-muted-foreground);
  }
}
.after\:absolute {
  &::after {
    content: var(--tw-content);
    position: absolute;
  }
}
.after\:-inset-2 {
  &::after {
    content: var(--tw-content);
    inset: calc(var(--spacing) * -2);
  }
}
.after\:inset-y-0 {
  &::after {
    content: var(--tw-content);
    inset-block: calc(var(--spacing) * 0);
  }
}
.after\:left-1\/2 {
  &::after {
    content: var(--tw-content);
    left: calc(1/2 * 100%);
  }
}
.after\:w-1 {
  &::after {
    content: var(--tw-content);
    width: calc(var(--spacing) * 1);
  }
}
.after\:w-\[2px\] {
  &::after {
    content: var(--tw-content);
    width: 2px;
  }
}
.after\:-translate-x-1\/2 {
  &::after {
    content: var(--tw-content);
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.group-data-\[collapsible\=offcanvas\]\:after\:left-full {
  &:is(:where(.group)[data-collapsible="offcanvas"] *) {
    &::after {
      content: var(--tw-content);
      left: 100%;
    }
  }
}
.first\:rounded-l-md {
  &:first-child {
    border-top-left-radius: var(--radius-md);
    border-bottom-left-radius: var(--radius-md);
  }
}
.first\:border-l {
  &:first-child {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }
}
.last\:rounded-r-md {
  &:last-child {
    border-top-right-radius: var(--radius-md);
    border-bottom-right-radius: var(--radius-md);
  }
}
.hover\:border-green-400 {
  &:hover {
    @media (hover: hover) {
      border-color: var(--color-green-400);
    }
  }
}
.hover\:border-white\/10 {
  &:hover {
    @media (hover: hover) {
      border-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
}
.hover\:border-white\/30 {
  &:hover {
    @media (hover: hover) {
      border-color: color-mix(in srgb, #fff 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 30%, transparent);
      }
    }
  }
}
.hover\:bg-\[\#1FB357\] {
  &:hover {
    @media (hover: hover) {
      background-color: #1FB357;
    }
  }
}
.hover\:bg-\[\#c22459\] {
  &:hover {
    @media (hover: hover) {
      background-color: #c22459;
    }
  }
}
.hover\:bg-accent {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-accent);
    }
  }
}
.hover\:bg-blue-600 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-blue-600);
    }
  }
}
.hover\:bg-destructive\/80 {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in srgb, 0 62.8% 30.6% 80%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-destructive) 80%, transparent);
      }
    }
  }
}
.hover\:bg-destructive\/90 {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in srgb, 0 62.8% 30.6% 90%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-destructive) 90%, transparent);
      }
    }
  }
}
.hover\:bg-green-500\/10 {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in srgb, oklch(72.3% 0.219 149.579) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-green-500) 10%, transparent);
      }
    }
  }
}
.hover\:bg-green-600 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-green-600);
    }
  }
}
.hover\:bg-green-700 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-green-700);
    }
  }
}
.hover\:bg-muted {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-muted);
    }
  }
}
.hover\:bg-muted\/50 {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in srgb, 217.2 32.6% 17.5% 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-muted) 50%, transparent);
      }
    }
  }
}
.hover\:bg-primary\/80 {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in srgb, 217.2 91.2% 59.8% 80%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-primary) 80%, transparent);
      }
    }
  }
}
.hover\:bg-primary\/90 {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in srgb, 217.2 91.2% 59.8% 90%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-primary) 90%, transparent);
      }
    }
  }
}
.hover\:bg-red-600 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-red-600);
    }
  }
}
.hover\:bg-secondary {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-secondary);
    }
  }
}
.hover\:bg-secondary\/80 {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in srgb, 217.2 32.6% 17.5% 80%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-secondary) 80%, transparent);
      }
    }
  }
}
.hover\:bg-white\/5 {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
}
.hover\:bg-white\/10 {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
}
.hover\:bg-white\/20 {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in srgb, #fff 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
  }
}
.hover\:bg-white\/\[0\.01\] {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in srgb, #fff 1%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 1%, transparent);
      }
    }
  }
}
.hover\:bg-white\/\[0\.04\] {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in srgb, #fff 4%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 4%, transparent);
      }
    }
  }
}
.hover\:bg-white\/\[0\.05\] {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
}
.hover\:text-accent-foreground {
  &:hover {
    @media (hover: hover) {
      color: var(--color-accent-foreground);
    }
  }
}
.hover\:text-foreground {
  &:hover {
    @media (hover: hover) {
      color: var(--color-foreground);
    }
  }
}
.hover\:text-muted-foreground {
  &:hover {
    @media (hover: hover) {
      color: var(--color-muted-foreground);
    }
  }
}
.hover\:text-white {
  &:hover {
    @media (hover: hover) {
      color: var(--color-white);
    }
  }
}
.hover\:underline {
  &:hover {
    @media (hover: hover) {
      text-decoration-line: underline;
    }
  }
}
.hover\:opacity-80 {
  &:hover {
    @media (hover: hover) {
      opacity: 80%;
    }
  }
}
.hover\:opacity-100 {
  &:hover {
    @media (hover: hover) {
      opacity: 100%;
    }
  }
}
.hover\:shadow-\[0_0_0_1px_hsl\(var\(--sidebar-accent\)\)\] {
  &:hover {
    @media (hover: hover) {
      --tw-shadow: 0 0 0 1px var(--tw-shadow-color, hsl(var(--sidebar-accent)));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
}
.group-\[\.destructive\]\:hover\:border-destructive\/30 {
  &:is(:where(.group):is(.destructive) *) {
    &:hover {
      @media (hover: hover) {
        border-color: color-mix(in srgb, 0 62.8% 30.6% 30%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-destructive) 30%, transparent);
        }
      }
    }
  }
}
.group-\[\.destructive\]\:hover\:bg-destructive {
  &:is(:where(.group):is(.destructive) *) {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-destructive);
      }
    }
  }
}
.group-\[\.destructive\]\:hover\:text-destructive-foreground {
  &:is(:where(.group):is(.destructive) *) {
    &:hover {
      @media (hover: hover) {
        color: var(--color-destructive-foreground);
      }
    }
  }
}
.group-\[\.destructive\]\:hover\:text-red-50 {
  &:is(:where(.group):is(.destructive) *) {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-50);
      }
    }
  }
}
.focus\:bg-accent {
  &:focus {
    background-color: var(--color-accent);
  }
}
.focus\:text-accent-foreground {
  &:focus {
    color: var(--color-accent-foreground);
  }
}
.focus\:text-white\/70 {
  &:focus {
    color: color-mix(in srgb, #fff 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }
}
.focus\:opacity-100 {
  &:focus {
    opacity: 100%;
  }
}
.focus\:ring-2 {
  &:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus\:ring-green-500\/50 {
  &:focus {
    --tw-ring-color: color-mix(in srgb, oklch(72.3% 0.219 149.579) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-green-500) 50%, transparent);
    }
  }
}
.focus\:ring-ring {
  &:focus {
    --tw-ring-color: var(--color-ring);
  }
}
.focus\:ring-violet-500\/50 {
  &:focus {
    --tw-ring-color: color-mix(in srgb, oklch(60.6% 0.25 292.717) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-violet-500) 50%, transparent);
    }
  }
}
.focus\:ring-offset-2 {
  &:focus {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }
}
.focus\:outline-none {
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.group-\[\.destructive\]\:focus\:ring-destructive {
  &:is(:where(.group):is(.destructive) *) {
    &:focus {
      --tw-ring-color: var(--color-destructive);
    }
  }
}
.group-\[\.destructive\]\:focus\:ring-red-400 {
  &:is(:where(.group):is(.destructive) *) {
    &:focus {
      --tw-ring-color: var(--color-red-400);
    }
  }
}
.group-\[\.destructive\]\:focus\:ring-offset-red-600 {
  &:is(:where(.group):is(.destructive) *) {
    &:focus {
      --tw-ring-offset-color: var(--color-red-600);
    }
  }
}
.focus-visible\:ring-1 {
  &:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus-visible\:ring-2 {
  &:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus-visible\:ring-ring {
  &:focus-visible {
    --tw-ring-color: var(--color-ring);
  }
}
.focus-visible\:ring-offset-1 {
  &:focus-visible {
    --tw-ring-offset-width: 1px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }
}
.focus-visible\:ring-offset-2 {
  &:focus-visible {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }
}
.focus-visible\:ring-offset-background {
  &:focus-visible {
    --tw-ring-offset-color: var(--color-background);
  }
}
.focus-visible\:outline-none {
  &:focus-visible {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.disabled\:pointer-events-none {
  &:disabled {
    pointer-events: none;
  }
}
.disabled\:cursor-not-allowed {
  &:disabled {
    cursor: not-allowed;
  }
}
.disabled\:opacity-50 {
  &:disabled {
    opacity: 50%;
  }
}
.has-focus\:border-ring {
  &:has(*:focus) {
    border-color: var(--color-ring);
  }
}
.has-focus\:ring-\[3px\] {
  &:has(*:focus) {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.has-focus\:ring-ring\/50 {
  &:has(*:focus) {
    --tw-ring-color: color-mix(in srgb, 224.3 76.3% 48% 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-ring) 50%, transparent);
    }
  }
}
.has-\[\:disabled\]\:opacity-50 {
  &:has(*:is(:disabled)) {
    opacity: 50%;
  }
}
.aria-disabled\:pointer-events-none {
  &[aria-disabled="true"] {
    pointer-events: none;
  }
}
.aria-disabled\:opacity-50 {
  &[aria-disabled="true"] {
    opacity: 50%;
  }
}
.aria-selected\:text-muted-foreground {
  &[aria-selected="true"] {
    color: var(--color-muted-foreground);
  }
}
.data-\[active\]\:bg-accent\/50 {
  &[data-active] {
    background-color: color-mix(in srgb, 217.2 32.6% 17.5% 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-accent) 50%, transparent);
    }
  }
}
.data-\[active\=true\]\:font-medium {
  &[data-active="true"] {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
}
.data-\[disabled\]\:pointer-events-none {
  &[data-disabled] {
    pointer-events: none;
  }
}
.data-\[disabled\]\:opacity-50 {
  &[data-disabled] {
    opacity: 50%;
  }
}
.data-\[disabled\=true\]\:pointer-events-none {
  &[data-disabled="true"] {
    pointer-events: none;
  }
}
.data-\[disabled\=true\]\:opacity-50 {
  &[data-disabled="true"] {
    opacity: 50%;
  }
}
.data-\[panel-group-direction\=vertical\]\:h-px {
  &[data-panel-group-direction="vertical"] {
    height: 1px;
  }
}
.data-\[panel-group-direction\=vertical\]\:w-full {
  &[data-panel-group-direction="vertical"] {
    width: 100%;
  }
}
.data-\[panel-group-direction\=vertical\]\:flex-col {
  &[data-panel-group-direction="vertical"] {
    flex-direction: column;
  }
}
.data-\[panel-group-direction\=vertical\]\:after\:left-0 {
  &[data-panel-group-direction="vertical"] {
    &::after {
      content: var(--tw-content);
      left: calc(var(--spacing) * 0);
    }
  }
}
.data-\[panel-group-direction\=vertical\]\:after\:h-1 {
  &[data-panel-group-direction="vertical"] {
    &::after {
      content: var(--tw-content);
      height: calc(var(--spacing) * 1);
    }
  }
}
.data-\[panel-group-direction\=vertical\]\:after\:w-full {
  &[data-panel-group-direction="vertical"] {
    &::after {
      content: var(--tw-content);
      width: 100%;
    }
  }
}
.data-\[panel-group-direction\=vertical\]\:after\:translate-x-0 {
  &[data-panel-group-direction="vertical"] {
    &::after {
      content: var(--tw-content);
      --tw-translate-x: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
}
.data-\[panel-group-direction\=vertical\]\:after\:-translate-y-1\/2 {
  &[data-panel-group-direction="vertical"] {
    &::after {
      content: var(--tw-content);
      --tw-translate-y: calc(calc(1/2 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
}
.data-\[range-end\=true\]\:rounded-md {
  &[data-range-end="true"] {
    border-radius: var(--radius-md);
  }
}
.data-\[range-end\=true\]\:rounded-r-md {
  &[data-range-end="true"] {
    border-top-right-radius: var(--radius-md);
    border-bottom-right-radius: var(--radius-md);
  }
}
.data-\[range-end\=true\]\:bg-primary {
  &[data-range-end="true"] {
    background-color: var(--color-primary);
  }
}
.data-\[range-end\=true\]\:text-primary-foreground {
  &[data-range-end="true"] {
    color: var(--color-primary-foreground);
  }
}
.data-\[range-middle\=true\]\:rounded-none {
  &[data-range-middle="true"] {
    border-radius: 0;
  }
}
.data-\[range-middle\=true\]\:bg-accent {
  &[data-range-middle="true"] {
    background-color: var(--color-accent);
  }
}
.data-\[range-middle\=true\]\:text-accent-foreground {
  &[data-range-middle="true"] {
    color: var(--color-accent-foreground);
  }
}
.data-\[range-start\=true\]\:rounded-md {
  &[data-range-start="true"] {
    border-radius: var(--radius-md);
  }
}
.data-\[range-start\=true\]\:rounded-l-md {
  &[data-range-start="true"] {
    border-top-left-radius: var(--radius-md);
    border-bottom-left-radius: var(--radius-md);
  }
}
.data-\[range-start\=true\]\:bg-primary {
  &[data-range-start="true"] {
    background-color: var(--color-primary);
  }
}
.data-\[range-start\=true\]\:text-primary-foreground {
  &[data-range-start="true"] {
    color: var(--color-primary-foreground);
  }
}
.data-\[selected-single\=true\]\:bg-primary {
  &[data-selected-single="true"] {
    background-color: var(--color-primary);
  }
}
.data-\[selected-single\=true\]\:text-primary-foreground {
  &[data-selected-single="true"] {
    color: var(--color-primary-foreground);
  }
}
.data-\[selected\=\'true\'\]\:bg-accent {
  &[data-selected='true'] {
    background-color: var(--color-accent);
  }
}
.data-\[selected\=true\]\:rounded-none {
  &[data-selected="true"] {
    border-radius: 0;
  }
}
.data-\[selected\=true\]\:text-accent-foreground {
  &[data-selected="true"] {
    color: var(--color-accent-foreground);
  }
}
.data-\[side\=bottom\]\:translate-y-1 {
  &[data-side="bottom"] {
    --tw-translate-y: calc(var(--spacing) * 1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.data-\[side\=left\]\:-translate-x-1 {
  &[data-side="left"] {
    --tw-translate-x: calc(var(--spacing) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.data-\[side\=right\]\:translate-x-1 {
  &[data-side="right"] {
    --tw-translate-x: calc(var(--spacing) * 1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.data-\[side\=top\]\:-translate-y-1 {
  &[data-side="top"] {
    --tw-translate-y: calc(var(--spacing) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.data-\[state\=active\]\:bg-background {
  &[data-state="active"] {
    background-color: var(--color-background);
  }
}
.data-\[state\=active\]\:bg-white\/\[0\.1\] {
  &[data-state="active"] {
    background-color: color-mix(in srgb, #fff 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
}
.data-\[state\=active\]\:text-foreground {
  &[data-state="active"] {
    color: var(--color-foreground);
  }
}
.data-\[state\=active\]\:text-white {
  &[data-state="active"] {
    color: var(--color-white);
  }
}
.data-\[state\=active\]\:shadow-sm {
  &[data-state="active"] {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.data-\[state\=checked\]\:translate-x-5 {
  &[data-state="checked"] {
    --tw-translate-x: calc(var(--spacing) * 5);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.data-\[state\=checked\]\:bg-primary {
  &[data-state="checked"] {
    background-color: var(--color-primary);
  }
}
.data-\[state\=checked\]\:text-primary-foreground {
  &[data-state="checked"] {
    color: var(--color-primary-foreground);
  }
}
.data-\[state\=closed\]\:duration-300 {
  &[data-state="closed"] {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
}
.data-\[state\=on\]\:bg-accent {
  &[data-state="on"] {
    background-color: var(--color-accent);
  }
}
.data-\[state\=on\]\:text-accent-foreground {
  &[data-state="on"] {
    color: var(--color-accent-foreground);
  }
}
.data-\[state\=open\]\:bg-accent {
  &[data-state="open"] {
    background-color: var(--color-accent);
  }
}
.data-\[state\=open\]\:bg-accent\/50 {
  &[data-state="open"] {
    background-color: color-mix(in srgb, 217.2 32.6% 17.5% 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-accent) 50%, transparent);
    }
  }
}
.data-\[state\=open\]\:bg-secondary {
  &[data-state="open"] {
    background-color: var(--color-secondary);
  }
}
.data-\[state\=open\]\:text-accent-foreground {
  &[data-state="open"] {
    color: var(--color-accent-foreground);
  }
}
.data-\[state\=open\]\:text-muted-foreground {
  &[data-state="open"] {
    color: var(--color-muted-foreground);
  }
}
.data-\[state\=open\]\:opacity-100 {
  &[data-state="open"] {
    opacity: 100%;
  }
}
.data-\[state\=open\]\:duration-500 {
  &[data-state="open"] {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
}
.data-\[state\=selected\]\:bg-muted {
  &[data-state="selected"] {
    background-color: var(--color-muted);
  }
}
.data-\[state\=unchecked\]\:translate-x-0 {
  &[data-state="unchecked"] {
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.data-\[state\=unchecked\]\:bg-input {
  &[data-state="unchecked"] {
    background-color: var(--color-input);
  }
}
.data-\[swipe\=cancel\]\:translate-x-0 {
  &[data-swipe="cancel"] {
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.data-\[swipe\=end\]\:translate-x-\[var\(--radix-toast-swipe-end-x\)\] {
  &[data-swipe="end"] {
    --tw-translate-x: var(--radix-toast-swipe-end-x);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.data-\[swipe\=move\]\:translate-x-\[var\(--radix-toast-swipe-move-x\)\] {
  &[data-swipe="move"] {
    --tw-translate-x: var(--radix-toast-swipe-move-x);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.data-\[swipe\=move\]\:transition-none {
  &[data-swipe="move"] {
    transition-property: none;
  }
}
.sm\:top-auto {
  @media (width >= 40rem) {
    top: auto;
  }
}
.sm\:right-0 {
  @media (width >= 40rem) {
    right: calc(var(--spacing) * 0);
  }
}
.sm\:bottom-0 {
  @media (width >= 40rem) {
    bottom: calc(var(--spacing) * 0);
  }
}
.sm\:mt-0 {
  @media (width >= 40rem) {
    margin-top: calc(var(--spacing) * 0);
  }
}
.sm\:flex {
  @media (width >= 40rem) {
    display: flex;
  }
}
.sm\:max-w-sm {
  @media (width >= 40rem) {
    max-width: var(--container-sm);
  }
}
.sm\:flex-col {
  @media (width >= 40rem) {
    flex-direction: column;
  }
}
.sm\:flex-row {
  @media (width >= 40rem) {
    flex-direction: row;
  }
}
.sm\:justify-end {
  @media (width >= 40rem) {
    justify-content: flex-end;
  }
}
.sm\:gap-2\.5 {
  @media (width >= 40rem) {
    gap: calc(var(--spacing) * 2.5);
  }
}
.sm\:space-x-2 {
  @media (width >= 40rem) {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
}
.sm\:rounded-lg {
  @media (width >= 40rem) {
    border-radius: var(--radius-lg);
  }
}
.sm\:text-left {
  @media (width >= 40rem) {
    text-align: left;
  }
}
.md\:absolute {
  @media (width >= 48rem) {
    position: absolute;
  }
}
.md\:col-span-2 {
  @media (width >= 48rem) {
    grid-column: span 2 / span 2;
  }
}
.md\:mt-10 {
  @media (width >= 48rem) {
    margin-top: calc(var(--spacing) * 10);
  }
}
.md\:block {
  @media (width >= 48rem) {
    display: block;
  }
}
.md\:flex {
  @media (width >= 48rem) {
    display: flex;
  }
}
.md\:grid {
  @media (width >= 48rem) {
    display: grid;
  }
}
.md\:hidden {
  @media (width >= 48rem) {
    display: none;
  }
}
.md\:h-4 {
  @media (width >= 48rem) {
    height: calc(var(--spacing) * 4);
  }
}
.md\:h-9 {
  @media (width >= 48rem) {
    height: calc(var(--spacing) * 9);
  }
}
.md\:h-10 {
  @media (width >= 48rem) {
    height: calc(var(--spacing) * 10);
  }
}
.md\:h-12 {
  @media (width >= 48rem) {
    height: calc(var(--spacing) * 12);
  }
}
.md\:max-h-none {
  @media (width >= 48rem) {
    max-height: none;
  }
}
.md\:w-4 {
  @media (width >= 48rem) {
    width: calc(var(--spacing) * 4);
  }
}
.md\:w-12 {
  @media (width >= 48rem) {
    width: calc(var(--spacing) * 12);
  }
}
.md\:w-96 {
  @media (width >= 48rem) {
    width: calc(var(--spacing) * 96);
  }
}
.md\:w-\[420px\] {
  @media (width >= 48rem) {
    width: 420px;
  }
}
.md\:w-\[var\(--radix-navigation-menu-viewport-width\)\] {
  @media (width >= 48rem) {
    width: var(--radix-navigation-menu-viewport-width);
  }
}
.md\:w-auto {
  @media (width >= 48rem) {
    width: auto;
  }
}
.md\:max-w-\[420px\] {
  @media (width >= 48rem) {
    max-width: 420px;
  }
}
.md\:grid-cols-2 {
  @media (width >= 48rem) {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}
.md\:grid-cols-4 {
  @media (width >= 48rem) {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
}
.md\:flex-row {
  @media (width >= 48rem) {
    flex-direction: row;
  }
}
.md\:gap-4 {
  @media (width >= 48rem) {
    gap: calc(var(--spacing) * 4);
  }
}
.md\:gap-8 {
  @media (width >= 48rem) {
    gap: calc(var(--spacing) * 8);
  }
}
.md\:space-y-4 {
  @media (width >= 48rem) {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
}
.md\:space-y-6 {
  @media (width >= 48rem) {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
}
.md\:p-8 {
  @media (width >= 48rem) {
    padding: calc(var(--spacing) * 8);
  }
}
.md\:px-3 {
  @media (width >= 48rem) {
    padding-inline: calc(var(--spacing) * 3);
  }
}
.md\:px-5 {
  @media (width >= 48rem) {
    padding-inline: calc(var(--spacing) * 5);
  }
}
.md\:px-6 {
  @media (width >= 48rem) {
    padding-inline: calc(var(--spacing) * 6);
  }
}
.md\:py-3 {
  @media (width >= 48rem) {
    padding-block: calc(var(--spacing) * 3);
  }
}
.md\:py-12 {
  @media (width >= 48rem) {
    padding-block: calc(var(--spacing) * 12);
  }
}
.md\:pt-16 {
  @media (width >= 48rem) {
    padding-top: calc(var(--spacing) * 16);
  }
}
.md\:pb-4 {
  @media (width >= 48rem) {
    padding-bottom: calc(var(--spacing) * 4);
  }
}
.md\:text-2xl {
  @media (width >= 48rem) {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
}
.md\:text-3xl {
  @media (width >= 48rem) {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
}
.md\:text-4xl {
  @media (width >= 48rem) {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
}
.md\:text-base {
  @media (width >= 48rem) {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
}
.md\:text-sm {
  @media (width >= 48rem) {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
}
.md\:text-xl {
  @media (width >= 48rem) {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
}
.md\:text-xs {
  @media (width >= 48rem) {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
}
.md\:opacity-0 {
  @media (width >= 48rem) {
    opacity: 0%;
  }
}
.md\:peer-data-\[variant\=inset\]\:m-2 {
  @media (width >= 48rem) {
    &:is(:where(.peer)[data-variant="inset"] ~ *) {
      margin: calc(var(--spacing) * 2);
    }
  }
}
.md\:peer-data-\[variant\=inset\]\:ml-0 {
  @media (width >= 48rem) {
    &:is(:where(.peer)[data-variant="inset"] ~ *) {
      margin-left: calc(var(--spacing) * 0);
    }
  }
}
.md\:peer-data-\[variant\=inset\]\:rounded-xl {
  @media (width >= 48rem) {
    &:is(:where(.peer)[data-variant="inset"] ~ *) {
      border-radius: var(--radius-xl);
    }
  }
}
.md\:peer-data-\[variant\=inset\]\:shadow {
  @media (width >= 48rem) {
    &:is(:where(.peer)[data-variant="inset"] ~ *) {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
}
.md\:peer-data-\[state\=collapsed\]\:peer-data-\[variant\=inset\]\:ml-2 {
  @media (width >= 48rem) {
    &:is(:where(.peer)[data-state="collapsed"] ~ *) {
      &:is(:where(.peer)[data-variant="inset"] ~ *) {
        margin-left: calc(var(--spacing) * 2);
      }
    }
  }
}
.after\:md\:hidden {
  &::after {
    content: var(--tw-content);
    @media (width >= 48rem) {
      display: none;
    }
  }
}
.dark\:border-destructive {
  @media (prefers-color-scheme: dark) {
    border-color: var(--color-destructive);
  }
}
.dark\:hover\:text-accent-foreground {
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        color: var(--color-accent-foreground);
      }
    }
  }
}
.\[\&_\.recharts-cartesian-axis-tick_text\]\:fill-muted-foreground {
  & .recharts-cartesian-axis-tick text {
    fill: var(--color-muted-foreground);
  }
}
.\[\&_\.recharts-cartesian-grid_line\[stroke\=\'\#ccc\'\]\]\:stroke-border\/50 {
  & .recharts-cartesian-grid line[stroke='#ccc'] {
    stroke: color-mix(in srgb, 217.2 32.6% 17.5% 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      stroke: color-mix(in oklab, var(--color-border) 50%, transparent);
    }
  }
}
.\[\&_\.recharts-curve\.recharts-tooltip-cursor\]\:stroke-border {
  & .recharts-curve.recharts-tooltip-cursor {
    stroke: var(--color-border);
  }
}
.\[\&_\.recharts-dot\[stroke\=\'\#fff\'\]\]\:stroke-transparent {
  & .recharts-dot[stroke='#fff'] {
    stroke: transparent;
  }
}
.\[\&_\.recharts-layer\]\:outline-none {
  & .recharts-layer {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.\[\&_\.recharts-polar-grid_\[stroke\=\'\#ccc\'\]\]\:stroke-border {
  & .recharts-polar-grid [stroke='#ccc'] {
    stroke: var(--color-border);
  }
}
.\[\&_\.recharts-radial-bar-background-sector\]\:fill-muted {
  & .recharts-radial-bar-background-sector {
    fill: var(--color-muted);
  }
}
.\[\&_\.recharts-rectangle\.recharts-tooltip-cursor\]\:fill-muted {
  & .recharts-rectangle.recharts-tooltip-cursor {
    fill: var(--color-muted);
  }
}
.\[\&_\.recharts-reference-line_\[stroke\=\'\#ccc\'\]\]\:stroke-border {
  & .recharts-reference-line [stroke='#ccc'] {
    stroke: var(--color-border);
  }
}
.\[\&_\.recharts-sector\]\:outline-none {
  & .recharts-sector {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.\[\&_\.recharts-sector\[stroke\=\'\#fff\'\]\]\:stroke-transparent {
  & .recharts-sector[stroke='#fff'] {
    stroke: transparent;
  }
}
.\[\&_\.recharts-surface\]\:outline-none {
  & .recharts-surface {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.\[\&_\[cmdk-group-heading\]\]\:px-2 {
  & [cmdk-group-heading] {
    padding-inline: calc(var(--spacing) * 2);
  }
}
.\[\&_\[cmdk-group-heading\]\]\:py-1\.5 {
  & [cmdk-group-heading] {
    padding-block: calc(var(--spacing) * 1.5);
  }
}
.\[\&_\[cmdk-group-heading\]\]\:text-xs {
  & [cmdk-group-heading] {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
}
.\[\&_\[cmdk-group-heading\]\]\:font-medium {
  & [cmdk-group-heading] {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
}
.\[\&_\[cmdk-group-heading\]\]\:text-muted-foreground {
  & [cmdk-group-heading] {
    color: var(--color-muted-foreground);
  }
}
.\[\&_\[cmdk-group\]\]\:px-2 {
  & [cmdk-group] {
    padding-inline: calc(var(--spacing) * 2);
  }
}
.\[\&_\[cmdk-group\]\:not\(\[hidden\]\)_\~\[cmdk-group\]\]\:pt-0 {
  & [cmdk-group]:not([hidden]) ~[cmdk-group] {
    padding-top: calc(var(--spacing) * 0);
  }
}
.\[\&_\[cmdk-input-wrapper\]_svg\]\:h-5 {
  & [cmdk-input-wrapper] svg {
    height: calc(var(--spacing) * 5);
  }
}
.\[\&_\[cmdk-input-wrapper\]_svg\]\:w-5 {
  & [cmdk-input-wrapper] svg {
    width: calc(var(--spacing) * 5);
  }
}
.\[\&_\[cmdk-input\]\]\:h-12 {
  & [cmdk-input] {
    height: calc(var(--spacing) * 12);
  }
}
.\[\&_\[cmdk-item\]\]\:px-2 {
  & [cmdk-item] {
    padding-inline: calc(var(--spacing) * 2);
  }
}
.\[\&_\[cmdk-item\]\]\:py-3 {
  & [cmdk-item] {
    padding-block: calc(var(--spacing) * 3);
  }
}
.\[\&_\[cmdk-item\]_svg\]\:h-5 {
  & [cmdk-item] svg {
    height: calc(var(--spacing) * 5);
  }
}
.\[\&_\[cmdk-item\]_svg\]\:w-5 {
  & [cmdk-item] svg {
    width: calc(var(--spacing) * 5);
  }
}
.\[\&_p\]\:leading-relaxed {
  & p {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }
}
.\[\&_svg\]\:pointer-events-none {
  & svg {
    pointer-events: none;
  }
}
.\[\&_svg\]\:size-4 {
  & svg {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
}
.\[\&_svg\]\:shrink-0 {
  & svg {
    flex-shrink: 0;
  }
}
.\[\&_tr\]\:border-b {
  & tr {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
}
.\[\&_tr\:last-child\]\:border-0 {
  & tr:last-child {
    border-style: var(--tw-border-style);
    border-width: 0px;
  }
}
.\[\&\:first-child\[data-selected\=true\]_button\]\:rounded-l-md {
  &:first-child[data-selected=true] button {
    border-top-left-radius: var(--radius-md);
    border-bottom-left-radius: var(--radius-md);
  }
}
.\[\&\:has\(\[role\=checkbox\]\)\]\:pr-0 {
  &:has([role=checkbox]) {
    padding-right: calc(var(--spacing) * 0);
  }
}
.rtl\:\*\*\:\[\.rdp-button\\_next\>svg\]\:rotate-180 {
  &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
    :is(& *) {
      &:is(.rdp-button_next>svg) {
        rotate: 180deg;
      }
    }
  }
}
.rtl\:\*\*\:\[\.rdp-button\\_previous\>svg\]\:rotate-180 {
  &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
    :is(& *) {
      &:is(.rdp-button_previous>svg) {
        rotate: 180deg;
      }
    }
  }
}
.\[\&\:last-child\[data-selected\=true\]_button\]\:rounded-r-md {
  &:last-child[data-selected=true] button {
    border-top-right-radius: var(--radius-md);
    border-bottom-right-radius: var(--radius-md);
  }
}
.\[\&\>button\]\:hidden {
  &>button {
    display: none;
  }
}
.\[\&\>span\]\:line-clamp-1 {
  &>span {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
  }
}
.\[\&\>span\]\:text-xs {
  &>span {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
}
.\[\&\>span\]\:opacity-70 {
  &>span {
    opacity: 70%;
  }
}
.\[\&\>span\:last-child\]\:truncate {
  &>span:last-child {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
}
.\[\&\>svg\]\:absolute {
  &>svg {
    position: absolute;
  }
}
.\[\&\>svg\]\:top-4 {
  &>svg {
    top: calc(var(--spacing) * 4);
  }
}
.\[\&\>svg\]\:left-4 {
  &>svg {
    left: calc(var(--spacing) * 4);
  }
}
.\[\&\>svg\]\:size-3\.5 {
  &>svg {
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
  }
}
.\[\&\>svg\]\:size-4 {
  &>svg {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
}
.\[\&\>svg\]\:h-2\.5 {
  &>svg {
    height: calc(var(--spacing) * 2.5);
  }
}
.\[\&\>svg\]\:h-3 {
  &>svg {
    height: calc(var(--spacing) * 3);
  }
}
.\[\&\>svg\]\:h-3\.5 {
  &>svg {
    height: calc(var(--spacing) * 3.5);
  }
}
.\[\&\>svg\]\:w-2\.5 {
  &>svg {
    width: calc(var(--spacing) * 2.5);
  }
}
.\[\&\>svg\]\:w-3 {
  &>svg {
    width: calc(var(--spacing) * 3);
  }
}
.\[\&\>svg\]\:w-3\.5 {
  &>svg {
    width: calc(var(--spacing) * 3.5);
  }
}
.\[\&\>svg\]\:shrink-0 {
  &>svg {
    flex-shrink: 0;
  }
}
.\[\&\>svg\]\:text-destructive {
  &>svg {
    color: var(--color-destructive);
  }
}
.\[\&\>svg\]\:text-foreground {
  &>svg {
    color: var(--color-foreground);
  }
}
.\[\&\>svg\]\:text-muted-foreground {
  &>svg {
    color: var(--color-muted-foreground);
  }
}
.\[\&\>svg\+div\]\:translate-y-\[-3px\] {
  &>svg+div {
    --tw-translate-y: -3px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
}
.\[\&\>svg\~\*\]\:pl-7 {
  &>svg~* {
    padding-left: calc(var(--spacing) * 7);
  }
}
.\[\&\>tr\]\:last\:border-b-0 {
  &>tr {
    &:last-child {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 0px;
    }
  }
}
.\[\&\[data-panel-group-direction\=vertical\]\>div\]\:rotate-90 {
  &[data-panel-group-direction=vertical]>div {
    rotate: 90deg;
  }
}
.\[\&\[data-state\=open\]\>svg\]\:rotate-180 {
  &[data-state=open]>svg {
    rotate: 180deg;
  }
}
.\[\[data-side\=left\]_\&\]\:cursor-w-resize {
  [data-side=left] & {
    cursor: w-resize;
  }
}
.\[\[data-side\=left\]\[data-collapsible\=offcanvas\]_\&\]\:-right-2 {
  [data-side=left][data-collapsible=offcanvas] & {
    right: calc(var(--spacing) * -2);
  }
}
.\[\[data-side\=left\]\[data-state\=collapsed\]_\&\]\:cursor-e-resize {
  [data-side=left][data-state=collapsed] & {
    cursor: e-resize;
  }
}
.\[\[data-side\=right\]_\&\]\:cursor-e-resize {
  [data-side=right] & {
    cursor: e-resize;
  }
}
.\[\[data-side\=right\]\[data-collapsible\=offcanvas\]_\&\]\:-left-2 {
  [data-side=right][data-collapsible=offcanvas] & {
    left: calc(var(--spacing) * -2);
  }
}
.\[\[data-side\=right\]\[data-state\=collapsed\]_\&\]\:cursor-w-resize {
  [data-side=right][data-state=collapsed] & {
    cursor: w-resize;
  }
}
.\[\[data-slot\=card-content\]_\&\]\:bg-transparent {
  [data-slot=card-content] & {
    background-color: transparent;
  }
}
.\[\[data-slot\=popover-content\]_\&\]\:bg-transparent {
  [data-slot=popover-content] & {
    background-color: transparent;
  }
}
@layer base {
  * {
    border-color: var(--color-border);
  }
  body {
    background-color: var(--color-background);
    color: var(--color-foreground);
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-ordinal {
  syntax: "*";
  inherits: false;
}
@property --tw-slashed-zero {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-figure {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-spacing {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-fraction {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-ordinal: initial;
      --tw-slashed-zero: initial;
      --tw-numeric-figure: initial;
      --tw-numeric-spacing: initial;
      --tw-numeric-fraction: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-content: "";
    }
  }
}

